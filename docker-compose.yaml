version: "3.8"

services:
  gmgn-tracker:
      build:
        context: .
        dockerfile: gmgnDckerfile
      restart: unless-stopped
      volumes:
        - ./config.toml:/app/config.toml:ro
        - ./logs/wallet-tracker:/app/logs
        - ./src:/app/src  # 开发模式：源代码映射
        - ./pyproject.toml:/app/pyproject.toml
        - ./pdm.lock:/app/pdm.lock
        - ./Makefile:/app/Makefile
      depends_on:
        - mysql
        - redis
      command: ["make", "gmgn-tracker"]
      networks:
        - backend

  wallet-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./config.toml:/app/config.toml:ro
      - ./logs/wallet-tracker:/app/logs
      - ./src:/app/src  # 开发模式：源代码映射
      - ./pyproject.toml:/app/pyproject.toml
      - ./pdm.lock:/app/pdm.lock
      - ./Makefile:/app/Makefile
    depends_on:
      - mysql
      - redis
    command: ["make", "wallet-tracker"]
    networks:
      - backend

  trading:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./config.toml:/app/config.toml:ro
      - ./logs/trading:/app/logs
      - ./src:/app/src  # 开发模式：源代码映射
      - ./pyproject.toml:/app/pyproject.toml
      - ./pdm.lock:/app/pdm.lock
      - ./Makefile:/app/Makefile
    depends_on:
      - mysql
      - redis
    command: ["make", "trading"]
    networks:
      - backend

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./config.toml:/app/config.toml:ro
      - ./logs/bot/:/app/logs
      - ./src:/app/src  # 开发模式：源代码映射
      - ./pyproject.toml:/app/pyproject.toml
      - ./pdm.lock:/app/pdm.lock
      - ./Makefile:/app/Makefile
    depends_on:
      - mysql
      - redis
      - wallet-tracker
      - trading
    command: ["make", "bot"]
    networks:
      - backend

  mysql:
    image: docker.io/library/mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=solana_trade_bot
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
    networks:
      - backend

  redis:
    image: docker.io/library/redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  mysql_data:
  redis_data:

networks:
  backend:
    driver: bridge
